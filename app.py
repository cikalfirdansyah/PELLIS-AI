# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r6ZD101fAqk-jyejs-dC9Hzg5hh8x7Ar
"""

from flask import Flask, request, jsonify
from flask_cors import CORS
import numpy as np
import tensorflow as tf
import cv2

app = Flask(__name__)
CORS(app)  # agar bisa diakses dari frontend berbeda domain (localhost, React, Vercel, dsb)

# === Load model
model = tf.keras.models.load_model('bestmodel.keras')  # atau .keras

# === Nama kelas hasil klasifikasi
CLASS_NAMES = ['Acne',
    'Chickenpox',
    'Dyshidrotic Eczema',
    'Nail Fungus',
    'Ringworm']

# === Preprocessing gambar
def preprocess_image(image_bytes):
    img_array = np.frombuffer(image_bytes, np.uint8)
    image = cv2.imdecode(img_array, cv2.IMREAD_COLOR)
    image = cv2.resize(image, (150, 150))
    image = image / 255.0
    image = np.expand_dims(image, axis=0)
    return image

# === Endpoint prediksi
@app.route('/predict', methods=['POST'])
def predict():
    if 'file' not in request.files:
        return jsonify({'error': 'No file uploaded'}), 400

    file = request.files['file']
    image = preprocess_image(file.read())

    prediction = model.predict(image)
    predicted_class = int(np.argmax(prediction))
    confidence = float(np.max(prediction))

    result = {
        'predicted_class': CLASS_NAMES[predicted_class],
        'confidence': round(confidence, 4)
    }

    return jsonify(result)

# === Jalankan server
if __name__ == '__main__':
    app.run(debug=True)